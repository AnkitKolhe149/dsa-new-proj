<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Kadane's Algorithm Visualization</title>
<style>
  body {
    font-family: Arial, sans-serif;
    background-color: #f5f9ff;
    display: flex;
    justify-content: center;
    padding: 0;
    margin: 0;
    color: #333;
  }
  #container {
    width: 90%;
    max-width: 800px;
    background-color: #ffffff;
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
    padding: 30px;
    margin-top: 20px;
    border-radius: 10px;
    text-align: center;
  }
  h2 {
    color: #4a90e2;
    margin-bottom: 5px;
  }
  #description {
    font-size: 16px;
    color: #555;
    margin-bottom: 20px;
    padding: 10px;
    background-color: #e8f1fa;
    border-radius: 8px;
  }
  .array-element {
    display: inline-block;
    margin: 8px;
    padding: 12px;
    width: 45px;
    background-color: #e8f1fa;
    border-radius: 8px;
    font-weight: bold;
    color: #333;
    transition: 0.3s;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  .highlight {
    background-color: #ffe082;
    color: #333;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }
  .global-highlight {
    background-color: #4a90e2;
    color: #fff;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }
  #info {
    margin-top: 20px;
    font-size: 18px;
    color: #333;
    font-weight: bold;
  }
  #current-subarray {
    font-size: 16px;
    color: #333;
    margin-top: 10px;
    margin-bottom: 20px;
    font-weight: bold;
  }
  #controls {
    margin-top: 20px;
    text-align: center;
  }
  #comparisons {
    max-height: 200px;
    overflow-y: auto;
    margin-top: 20px;
    border: 1px solid #d1e3f0;
    padding: 10px;
    border-radius: 8px;
    background-color: #f9fcff;
    font-size: 14px;
  }
  button {
    margin: 5px;
    padding: 10px 20px;
    font-size: 16px;
    color: #ffffff;
    background-color: #4a90e2;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s;
  }
  button:hover {
    background-color: #357ab8;
  }
  label {
    font-size: 16px;
    margin-right: 10px;
  }
  input[type="range"] {
    margin-top: 10px;
  }
</style>
</head>
<body>
<div id="container">
  <h2>Kadane's Algorithm Visualization</h2>
  <div id="description">
    Kadane's Algorithm efficiently finds the maximum sum of a contiguous subarray. Enter your own array below to see the algorithm in action.
  </div>

  <div id="input-section">
    <label for="array-input">Enter array (comma-separated):</label>
    <input type="text" id="array-input" placeholder="e.g., 2,1,3,-1,4,-2">
    <button onclick="startKadane()">Visualize</button>
  </div>

  <div id="array"></div>

  <div id="info">
    Max Subarray Sum So Far: <span id="max-sum">0</span>
  </div>
  <div id="current-subarray">
    Current Subarray: <span id="subarray-display"></span>
  </div>

  <h3>Comparison Details:</h3>
  <div id="comparisons"></div>
</div>

<script>
  let arr = [];
  let maxSumGlobal;
  let maxSumCurrent;
  let currentIndex;
  let interval;
  let paused = false;
  let currentSubarray = [];

  function createArrayDisplay() {
    const arrayContainer = document.getElementById('array');
    arrayContainer.innerHTML = '';
    arr.forEach((num, index) => {
      const element = document.createElement('div');
      element.classList.add('array-element');
      element.id = `element-${index}`;
      element.textContent = num;
      arrayContainer.appendChild(element);
    });
  }

  function updateDisplay() {
    document.getElementById('max-sum').textContent = maxSumGlobal;
    document.getElementById('subarray-display').textContent = currentSubarray.join(", ");
    
    arr.forEach((_, index) => {
      const element = document.getElementById(`element-${index}`);
      element.classList.remove('highlight', 'global-highlight');
    });
    if (currentIndex < arr.length) {
      document.getElementById(`element-${currentIndex}`).classList.add('highlight');
    }
  }

  function logComparison(currentValue, calculatedMax) {
    const comparisonsDiv = document.getElementById('comparisons');
    const comparisonElement = document.createElement('div');
    comparisonElement.textContent = `Current Value: ${currentValue}, Calculated Max Sum (current): ${calculatedMax}, Global Max Sum: ${maxSumGlobal}`;
    comparisonsDiv.appendChild(comparisonElement);
    comparisonsDiv.scrollTop = comparisonsDiv.scrollHeight;
  }

  function kadaneStep() {
    if (currentIndex >= arr.length) return;

    if (maxSumCurrent + arr[currentIndex] > arr[currentIndex]) {
      maxSumCurrent += arr[currentIndex];
      currentSubarray.push(arr[currentIndex]);
    } else {
      maxSumCurrent = arr[currentIndex];
      currentSubarray = [arr[currentIndex]];
    }

    maxSumGlobal = Math.max(maxSumGlobal, maxSumCurrent);

    logComparison(arr[currentIndex], maxSumCurrent);
    updateDisplay();

    currentIndex++;
    if (currentIndex < arr.length) {
      interval = setTimeout(kadaneStep, 1000);
    }
  }

  function startKadane() {
    const inputArray = document.getElementById('array-input').value;
    arr = inputArray.split(',').map(Number);

    if (arr.some(isNaN)) {
      alert("Please enter valid numbers separated by commas.");
      return;
    }

    currentIndex = 1;
    maxSumGlobal = arr[0];
    maxSumCurrent = arr[0];
    currentSubarray = [arr[0]];
    document.getElementById('comparisons').innerHTML = '';

    createArrayDisplay();
    updateDisplay();
    kadaneStep();
  }
</script>
</body>
</html>
